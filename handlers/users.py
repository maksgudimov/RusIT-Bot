from aiogram import types
from aiogram.types import InputFile , ChatActions
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext

from config import bot

from keyboards.keyboard import start_kb,scripts_kb,phone_kb,projects_kb,keyb_develop,kb_collab,kb_jokes
from db.connect import connection
import datetime
from class_group.states import ScriptLeafThrough,Form,Cooperation,CollabWithUser,ChatGPT
import openai

openai.api_key = "" #  

CHANNEL_ID = ""

async def info(message:types.Message,state:FSMContext):
    global base, cur
    base, cur = await connection()
    await state.finish()
    await bot.send_message(message.chat.id,f"–ì–æ—Ç–æ–≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:\n\n"
                                           f"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π\n"
                                           f"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —É–º–Ω—ã—Ö –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤\n"
                                           f"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–± - —Å–∞–π—Ç–æ–≤\n"
                                           f"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π\n"
                                           f"–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –£–º–Ω—ã—Ö Telegram –±–æ—Ç–æ–≤\n"
                                           f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤\n"
                                           f"–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤\n"
                                           f"–°–∏—Å—Ç–µ–º–Ω–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n"
                                           f"–ü–∏—à–∏—Ç–µ –Ω–∞–º –ø–æ –ª—é–±–æ–π –≤–∞—à–µ–π –∑–∞–¥–∞—á–µ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—É! –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—èüôÇ")
    cur.execute(f"UPDATE Statisticks SET info = info + 1")
    base.commit()


async def channels(message:types.Message,state:FSMContext):
    global base, cur
    base, cur = await connection()
    await state.finish()
    await bot.send_message(message.chat.id,f"–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –≤ –Ω–∞—à –∫–∞–Ω–∞–ª - https://t.me/rusit_company , —Ç–∞–º –µ—Å—Ç—å –º–Ω–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –Ω–µ —Ç–æ–ª—å–∫–æü§≤")
    cur.execute(f"UPDATE Statisticks SET channels = channels + 1")
    base.commit()

async def start(message:types.Message,state: FSMContext):
    await state.finish()
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
    except:
        pass

    global base,cur
    base, cur = await connection()
    user = cur.execute(f"SELECT callback FROM Users WHERE callback == ?",(message.chat.id,)).fetchone()
    if user == None:
        sql_user_insert = """INSERT INTO Users(datatime,callback,link,ban) VALUES(?,?,?,?)"""
        data_insert = (datetime.date.today(),message.chat.id,message.from_user.username,0)
        cur.execute(sql_user_insert,data_insert)
        base.commit()
        photo = InputFile("img/img_start.png")
        await bot.send_photo(message.chat.id,photo,
                               f"–ü—Ä–∏–≤–µ—Ç! üëãüèº\n\n–ú—ã - –∫–æ–º–ø–∞–Ω–∏—è –†—É—Å IT üá∑üá∫ –∑–∞–Ω–∏–º–∞—é—â–∞—è—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µüíª"
                               f"\n\n–ü–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –Ω–∞–º–∏ –ø–æ–±–ª–∏–∂–µ!\n\n–í—ã–±–∏—Ä–∞–π –æ–ø—Ü–∏—é:",
                               reply_markup=start_kb)
    else:
        (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?",(message.chat.id,)).fetchone()
        if ban == 0:
            photo = InputFile("img/img_start.png")
            await bot.send_photo(message.chat.id,photo,
                                   f"–ü—Ä–∏–≤–µ—Ç! üëãüèº\n\n–ú—ã - –∫–æ–º–ø–∞–Ω–∏—è –†—É—Å IT üá∑üá∫ –∑–∞–Ω–∏–º–∞—é—â–∞—è—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µüíª"
                                   f"\n\n–ü–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –Ω–∞–º–∏ –ø–æ–±–ª–∏–∂–µ!\n\n–í—ã–±–∏—Ä–∞–π –æ–ø—Ü–∏—é:",
                                   reply_markup=start_kb)
            cur.execute(f"UPDATE Statisticks SET start = start + 1")
            base.commit()
        elif ban == 1:
            await bot.send_message(message.chat.id,
                                   f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")


    user_state = cur.execute(f"SELECT callback FROM UserState WHERE callback == ?",(message.chat.id,)).fetchone()
    if user_state == None:
        sql_userState_insert = """INSERT INTO UserState(callback,state) VALUES(?,?)"""
        data_userState_insert = (message.chat.id,1)
        cur.execute(sql_userState_insert,data_userState_insert)
        base.commit()
    else:
        sql_userState_update = """UPDATE UserState SET state = ? WHERE callback == ?"""
        data_userState_update = (1,message.chat.id)
        cur.execute(sql_userState_update,data_userState_update)
        base.commit()
    user_state_project = cur.execute(f"SELECT callback FROM UserStateProjects WHERE callback == ?", (message.chat.id,)).fetchone()
    if user_state_project == None:
        sql_userState_insert = """INSERT INTO UserStateProjects(callback,state) VALUES(?,?)"""
        data_userState_insert = (message.chat.id, 1)
        cur.execute(sql_userState_insert, data_userState_insert)
        base.commit()
    else:
        sql_userState_update = """UPDATE UserStateProjects SET state = ? WHERE callback == ?"""
        data_userState_update = (1, message.chat.id)
        cur.execute(sql_userState_update, data_userState_update)
        base.commit()
    user_state_jokes = cur.execute(f"SELECT callback FROM UserStateJokes WHERE callback == ?",
                                     (message.chat.id,)).fetchone()
    if user_state_jokes == None:
        sql_userState_insert = """INSERT INTO UserStateJokes(callback,state) VALUES(?,?)"""
        data_userState_insert = (message.chat.id, 1)
        cur.execute(sql_userState_insert, data_userState_insert)
        base.commit()
    else:
        sql_userState_update = """UPDATE UserStateJokes SET state = ? WHERE callback == ?"""
        data_userState_update = (1, message.chat.id)
        cur.execute(sql_userState_update, data_userState_update)
        base.commit()


async def callbackKeyboardStart(callback:types.CallbackQuery,state:FSMContext):
    await bot.answer_callback_query(callback.id)
    str = callback.data.split("_")[1]
    base, cur = await connection()
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (callback.from_user.id,)).fetchone()
    if ban == 1:
        await bot.send_message(callback.from_user.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if str == "whatis":
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass
            photo = InputFile("About2.png")
            await bot.send_photo(callback.from_user.id,photo,reply_markup=start_kb)
            cur.execute(f"UPDATE Statisticks SET button_about = button_about + 1")
            base.commit()
            # await bot.send_message(callback.from_user.id, f"–û–±—â–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è:\n\n"
            #                                               f"–ö–æ–º–ø–∞–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∞ –≤ —Ñ–µ–≤—Ä–∞–ª–µ 2022 –≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ "
            #                                               f"—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –Ω–∞—É–∫–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö (Data Science)."
            #                                               f"–í —Ç–µ—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª–∏, –µ—â–µ –¥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —É—Å–ø–µ—à–Ω–æ —Ä–µ—à–∏–ª–∏ —Ä—è–¥ –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á –ø–æ"
            #                                               f" –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω–æ–≤–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤."
            #                                               f"–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤–æ–∑–Ω–∏–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Å–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–æ–±–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –≤ –Ω–æ—è–±—Ä–µ 2022 –≥–æ–¥–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –†—É—Å–ê–π–¢–∏ —Å –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤"
            #                                               f" –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —è–∑—ã–∫–∞—Ö –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π."
            #                                               f"\n\n–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:\n\n"
            #                                               f"–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥. –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —É—á–µ–±–Ω–∏–∫ –ø–æ –∫–æ–º–ø–ª–µ–∫—Å—É –≤–æ–æ—Ä—É–∂–µ–Ω–∏—è –¥–ª—è "
            #                                               f"–≤–æ–µ–Ω–Ω–æ–π –∫–∞—Ñ–µ–¥—Ä—ã –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –¥–ª—è –æ—Å–≤–æ–µ–Ω–∏—è –¥–≤—É—Ö–ª–µ—Ç–Ω–µ–π "
            #                                               f"—É—á–µ–±–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏. –°—Ä–æ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ‚Äì 120 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π.\n"
            #                                               f"–¢–≤–µ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å. –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å—Ä–µ–¥–Ω–∏—Ö –ø–æ —Ä—ã–Ω–∫—É —Ü–µ–Ω –Ω–∞ "
            #                                               f"—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏-–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –º–æ—Ç–æ—Ä–Ω—ã—Ö –º–∞—Å–µ–ª —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é "
            #                                               f"—Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ü–µ–Ω –∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø—Ä–∏ –∏—Ö –≤—ã—Ö–æ–¥–µ –∑–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º "
            #                                               f"—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç. –°—Ä–æ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ ‚Äì 20 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π.\n"
            #                                               f"–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —É–º–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º - –±–æ—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º –¥–ª—è "
            #                                               f"–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∏ –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –í—Å—è —Ä—É—Ç–∏–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–µ—Ä–µ–¥–∞–ª–∞—Å—å –±–æ—Ç—É.\n"
            #                                               f"–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–∞–π—Ç–æ–≤ —Ä–∞–∑–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å –≤—ã—Å–æ–∫–∏–º —É—Ä–æ–≤–Ω–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ "
            #                                               f"–¥–ª—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤–Ω–µ—à–Ω–∏—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º\n"
            #                                               f"–ù–∞—à–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –±–æ—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –±–µ–∂–µ–Ω—Ü–∞–º –∏ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü–∞–º. "
            #                                               f"–î–∞–Ω–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –±–æ–ª—å—à–µ  30000 —Ç—ã—Å—è—á–∏ –ª—é–¥–µ–π. –ü—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–ª –∏–∑ —Å–µ–±—è –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º, "
            #                                               f"—Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π –∏–∑ –æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –¥—Ä—É–≥–æ–µ. –ü—Ä–æ–µ–∫—Ç –ø–æ–º–æ–≥ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π –∏ –∑–Ω–∞–∫–æ–º—ã—Ö, "
            #                                               f"–Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–æ –¥–ª—è –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü–µ–≤. –¢–∞–∫–∂–µ –±–æ—Ç –ø–æ–∑–≤–æ–ª–∏–ª —Å–Ω–∏–∑–∏—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é "
            #                                               f"–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ–¥–∞, –∞ —Ç–∞–∫–∂–µ –Ω–∞ –≥–æ—Ä—è—á–∏–µ –ª–∏–Ω–∏–∏ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π\n"
            #                                               f"–ü–µ—Ä–µ–≤–æ–¥ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø–µ–Ω—Å–∏–æ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞ –Ω–∞ –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ü–û. "
            #                                               f"–ú–µ–Ω–µ–µ —á–µ–º –∑–∞ –º–µ—Å—è—Ü –ø–µ—Ä–µ–≤–µ–ª–∏ 150000 –∑–∞–ø–∏—Å–µ–π —Å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ –∑–∞—â–∏—Ç–µ "
            #                                               f"–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ü–û, –Ω–∞—Å—Ç—Ä–æ–∏–ª–∏ –º–∏–≥—Ä–∞—Ü–∏—é, –∞–¥–º–∏–Ω–∫—É –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.\n\n"
            #                                               f"–ü–æ—á–µ–º—É –º—ã?\n\n"
            #                                               f"1. –ù–∞–º –¥–æ–≤–µ—Ä—è—é—Ç –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n"
            #                                               f"2. –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏–¥–µ–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–∞ –Ω–∞ –≤—Å–µ –∑–∞–¥–∞—á–∏\n"
            #                                               f"3. –ú–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–π –æ–ø—ã—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ –≤—Å–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º\n"
            #                                               f"4. –°–∞–º—ã–µ –Ω–æ–≤—ã–µ –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ú—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å–ª–µ–¥–∏–º –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ IT –º–∏—Ä–∞\n"
            #                                               f"5. –ü—Ä–∏–≤–ª–µ–∫–∞–µ–º –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –º–æ–ª–æ–¥—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –¥–ª—è —Å–≤–µ–∂–∏—Ö –∏ –º–æ–¥–Ω—ã—Ö –∏–¥–µ–π\n",reply_markup=start_kb)
            #







        if str == "cooperation":
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass
            photo = InputFile("img/consultate.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫—É—é —Ç–µ–º—ã –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è:",reply_markup=keyb_develop)
            await Cooperation.what.set()
            cur.execute(f"UPDATE Statisticks SET button_consultate = button_consultate + 1")
            base.commit()
        if str == "contacts":
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass
            await bot.send_message(callback.from_user.id,f"–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é ¬´–ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–´–ï –¢–ï–•–ù–û–õ–û–ì–ò–ò –†–£–°¬ª\n\n–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: company@rusaiti.ru\n\n"
                                                          f"–¢–µ–ª–µ—Ñ–æ–Ω: +7(980)496-57-66\n\n–ò–ù–ù: 9724057093", reply_markup=start_kb)
            cur.execute(f"UPDATE Statisticks SET button_contacts = button_contacts + 1")
            base.commit()

        if str == "scripts":
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass

            first_script_unpack = cur.execute(
                f"SELECT id FROM Scripts WHERE id IN (SELECT min(id) FROM Scripts)").fetchone()

            if first_script_unpack == None:
                await bot.send_message(callback.from_user.id, f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–∫—Ä–∏–ø—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Å–∫–æ—Ä–æ –ø–æ–ø–æ–ª–Ω–∏–º!",
                                       reply_markup=start_kb)
            else:
                (first_script,) = first_script_unpack
                for ret in cur.execute(f"SELECT name,description,price,img FROM Scripts WHERE id = '{first_script}'"):
                    await bot.send_photo(callback.from_user.id, ret[3],
                                         f"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:<b>{ret[0]}</b>\n\n–û–ø–∏—Å–∞–Ω–∏–µ:<b>{ret[1]}</b>\n\n–¶–µ–Ω–∞:<b>{ret[2]} —Ä—É–±–ª–µ–π</b>\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                         parse_mode="HTML", reply_markup=scripts_kb)
            cur.execute(f"UPDATE Statisticks SET button_scripts = button_scripts + 1")
            base.commit()

        if str == "ourprojects":
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass

            first_project_unpack = cur.execute(
                f"SELECT id FROM Projects WHERE id IN (SELECT min(id) FROM Projects)").fetchone()
            if first_project_unpack == None:
                await bot.send_message(callback.from_user.id, f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Å–∫–æ—Ä–æ –ø–æ–ø–æ–ª–Ω–∏–º!",
                                       reply_markup=start_kb)
            else:
                (first_project,) = first_project_unpack
                for ret in cur.execute(f"SELECT img FROM Projects WHERE id = '{first_project}'"):
                    await bot.send_photo(callback.from_user.id, ret[0],
                                         f"–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                         parse_mode="HTML", reply_markup=projects_kb)
            cur.execute(f"UPDATE Statisticks SET button_ourProjects = button_ourProjects + 1")
            base.commit()
        if str == "joke":
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass
            first_joke_unpack = cur.execute(
                f"SELECT id FROM Jokes WHERE id IN (SELECT min(id) FROM Jokes)").fetchone()
            if first_joke_unpack == None:
                await bot.send_message(callback.from_user.id, f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–Ω–µ–∫–¥–æ—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Å–∫–æ—Ä–æ –ø–æ–ø–æ–ª–Ω–∏–º!",
                                       reply_markup=start_kb)
            else:
                (first_joke,) = first_joke_unpack
                for ret in cur.execute(f"SELECT joke FROM Jokes WHERE id = '{first_joke}'"):
                    await bot.send_message(callback.from_user.id,
                                         f"<b>{ret[0]}</b>\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                         parse_mode="HTML", reply_markup=kb_jokes)
            cur.execute(f"UPDATE Statisticks SET button_jokes = button_jokes + 1")
            base.commit()
            #photo = InputFile("img/joke.png")
            # await bot.send_photo(callback.from_user.id,photo,
            #                      f"–í—ã –≤–æ—à–ª–∏ –≤ —Ä—É–±—Ä–∏–∫—É –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –∏ —à—É—Ç–æ–∫ –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤üòâ\n–≠—Ç–∞ —Ä—É–±—Ä–∏–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—èüëç–ü—Ä–∏—è—Ç–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –∏ —Å–º–µ—Ö–∞üòä\n\n–ò–º–µ–π—Ç–µ –≤–≤–∏–¥—É,"
            #                      f" <b>–¥–ª—è —Ç–æ–≥–æ</b>, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start\n\n"
            #                      f"<b>-----1-----</b>\n"
            #                      f"–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –∑–≤–æ–Ω–∏—Ç –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É.\n"
            #                      f"‚Äî –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ö–∞—Ç—é –º–æ–∂–Ω–æ?\n"
            #                      f"‚Äî –û–Ω–∞ –≤ –∞—Ä—Ö–∏–≤–µ.\n"
            #                      f"‚Äî –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–π—Ç–µ –µ–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞. –û–Ω–∞ –º–Ω–µ —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–∞!\n"
            #                      f"<b>-----2-----</b>\n"
            #                      f"‚Äî –ü–æ —Ä–∞–¥–∏–æ —Å–æ–æ–±—â–∏–ª–∏ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –∑–∏–º–Ω–µ–µ –≤—Ä–µ–º—è, —Å–∫–∞–∑–∞–≤, —á—Ç–æ ¬´—ç—Ç–æ–π –Ω–æ—á—å—é, —Ä–æ–≤–Ω–æ –≤ 03:00 –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å—Ç—Ä–µ–ª–∫—É —á–∞—Å–æ–≤ –Ω–∞ –æ–¥–∏–Ω —á–∞—Å –Ω–∞–∑–∞–¥, –Ω–∞ 02:00¬ª.\n"
            #                      f"‚Äî –£ –≤—Å–µ—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ —ç—Ç–∞ –Ω–æ—á—å –∑–∞–≤–∏—Å–ª–∞ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ.\n"
            #                      f"<b>-----3-----</b>\n"
            #                      f"–ï—Å–ª–∏ –±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –±—ã–ª–∏ –≤—Ä–∞—á–∞–º–∏, –∏–º –±—ã –≥–æ–≤–æ—Ä–∏–ª–∏ ¬´–£ –º–µ–Ω—è –±–æ–ª–∏—Ç –Ω–æ–≥–∞¬ª, –∞ –æ–Ω–∏ –æ—Ç–≤–µ—á–∞–ª–∏ ¬´–ù—É –Ω–µ –∑–Ω–∞—é, —É –º–µ–Ω—è —Ç–∞–∫–∞—è –∂–µ –Ω–æ–≥–∞, –∞ –Ω–∏—á–µ–≥–æ –Ω–µ –±–æ–ª–∏—Ç¬ª.\n"
            #                      f"<b>-----4-----</b>\n"
            #                      f"–†–∞–±–æ—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ –∏ —à–∞–º–∞–Ω–∞ –∏–º–µ–µ—Ç –º–Ω–æ–≥–æ –æ–±—â–µ–≥–æ ‚Äî –æ–±–∞ –±–æ—Ä–º–æ—á—É—Ç –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —Å–ª–æ–≤–∞, —Å–æ–≤–µ—Ä—à–∞—é—Ç –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –Ω–µ –º–æ–≥—É—Ç –æ–±—ä—è—Å–Ω–∏—Ç—å, –∫–∞–∫ –æ–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n",
            #                      parse_mode="HTML")
        if str == "collab":
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass
            photo = InputFile("img/collab.png")
            await bot.send_photo(callback.from_user.id,photo,
                                   f"–ï—Å–ª–∏ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –æ–ø—ã—Ç –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ</b> –∏–ª–∏ "
                                   f"–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –ø–æ –ø–æ—á—Ç–µ - company@rusaiti.ru —Å –ø–æ–º–µ—Ç–∫–æ–π <b>–†–µ–∑—é–º–µ</b>\n\n"
                                   f"–ï—Å–ª–∏ –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é –∏ —Ö–æ—Ç–∏—Ç–µ (–∏–ª–∏ –∂–µ–ª–∞–µ—Ç–µ) –ø–æ—Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å —Å –Ω–∞–º–∏ –≤ "
                                   f"–ø—Ä–æ–µ–∫—Ç–∞—Ö –∏–ª–∏ —Ä–µ–∫–ª–∞–º–∞—Ö,–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</b>, –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –ø–æ –ø–æ—á—Ç–µ - company@rusaiti.ru "
                                   f"—Å –ø–æ–º–µ—Ç–∫–æ–π <b>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É</b> –∏–ª–∏ <b>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Ä–µ–∫–ª–∞–º–µ</b>", parse_mode="HTML",
                                   reply_markup=kb_collab)
        if str == "GPT":
            await bot.send_message(callback.from_user.id,f"–ü—Ä–∏–≤–µ—Ç! –Ø - ChatGPT.\n\n–ú—ã –ø–æ–¥—Ä—É–∂–∏–ª–∏—Å—å —Å –∫–æ–º–ø–∞–Ω–∏–µ–π RusIT –∏ —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –æ–±—â–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π –∏ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã"
                                                         f"–ø—Ä—è–º–æ —Ç—É—Ç!üî•\n\n–ü–∏—à–∏ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å:\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏ - /start")
            await ChatGPT.mess.set()

async def mess_to_chatGPT(message:types.Message,state:FSMContext):
    if message.content_type != "text":
        await bot.send_message(message.chat.id,f"–Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑.")
        await ChatGPT.mess.set()
    if message.text == "/start":
        await start(message,state)
        await state.finish()
    else:
        await bot.send_chat_action(chat_id=message.chat.id,action=ChatActions.TYPING)
        try:
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo", # gpt-3.5-turbo text-davinci-003
                messages = [
                    {"role": "system", "content": "/start"},
                    {"role": "user", "content": message.text}
                ]
                # prompt=message.text,
                # temperature=0.7,
                # max_tokens=150,
                # top_p=1,
                # frequency_penalty=0.9,
                # presence_penalty=0.7,
                # stop=None
            )
            await bot.send_message(message.chat.id,
                                   f"{response['choices'][0]['message']['content']}\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏ /start")
            #await bot.send_message(message.chat.id,f"{response['choices'][0]['text']}\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏ /start")
            await ChatGPT.mess.set()
        except:
            await bot.send_message(message.chat.id,f"–ò–∑–≤–∏–Ω–∏, —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, —Å–µ–π—á–∞—Å –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏ /start")
            await ChatGPT.mess.set()




async def cooperation_what_of_user(callback:types.CallbackQuery,state:FSMContext):
    await bot.answer_callback_query(callback.id)
    str = callback.data.split("_")[1]
    base, cur = await connection()
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (callback.from_user.id,)).fetchone()
    if ban == 1:
        await bot.send_message(callback.from_user.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if str == "II":
            async with state.proxy() as data:
                data['what'] = "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç"
            photo = InputFile("img/II_Bot.png")
            await bot.send_photo(callback.from_user.id,photo,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Sys":
            async with state.proxy() as data:
                data['what'] = "–°–∏—Å. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ"
            photo = InputFile("img/sys_adm.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –°–∏—Å. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Bots":
            async with state.proxy() as data:
                data['what'] = "–£–º–Ω—ã–π –¢–ì –ë–æ—Ç"
            photo = InputFile("img/tg_bot.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–º–Ω—ã–π –¢–ì –ë–æ—Ç.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Android":
            async with state.proxy() as data:
                data['what'] = "Android –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
            photo = InputFile("img/android.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ Android –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Asists":
            async with state.proxy() as data:
                data['what'] = "–£–º–Ω—ã–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç"
            photo = InputFile("img/assist.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –£–º–Ω—ã–π –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Audit":
            async with state.proxy() as data:
                data['what'] = "–ê—É–¥–∏—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π"
            photo = InputFile("img/audit.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ê—É–¥–∏—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Web":
            async with state.proxy() as data:
                data['what'] = "Web –°–∞–π—Ç"
            photo = InputFile("img/web-site.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ Web –°–∞–π—Ç.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Escort":
            async with state.proxy() as data:
                data['what'] = "–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
            photo = InputFile("img/sopr_projects.png")
            await bot.send_photo(callback.from_user.id, photo ,f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if str == "Other":
            await bot.send_message(callback.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ, –Ω–∞ –∫–∞–∫—É—é —Ç–µ–º—É –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.other.set()
        if str == "back":
            await state.finish()
            try:
                await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            except:
                pass
            photo = InputFile("img/img_start.png")
            await bot.send_photo(callback.from_user.id,photo,
                                   f"–ü—Ä–∏–≤–µ—Ç! üëãüèº\n\n–ú—ã - –∫–æ–º–ø–∞–Ω–∏—è –†—É—Å IT üá∑üá∫ –∑–∞–Ω–∏–º–∞—é—â–∞—è—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µüíª"
                                   f"\n\n–ü–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –Ω–∞–º–∏ –ø–æ–±–ª–∏–∂–µ!\n\n–í—ã–±–∏—Ä–∞–π –æ–ø—Ü–∏—é:",
                                   reply_markup=start_kb)

async def user_insert_consult_other(message:types.Message,state:FSMContext):
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (message.chat.id,)).fetchone()
    if ban == 1:
        await bot.send_message(message.chat.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if message.content_type != 'text':
            await bot.send_message(message.chat.id,
                                   f"–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!–ù–∞–ø–∏—à–∏—Ç–µ –µ—â–µ —Ä–∞–∑\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.other.set()
        if message.text == "/start":
            await start(message, state)
        else:
            async with state.proxy() as data:
                data['what'] = message.text
            await bot.send_message(message.chat.id, f"–•–æ—Ä–æ—à–æ, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()




async def throughtProjects(callback:types.CallbackQuery,state:FSMContext):
    await bot.answer_callback_query(callback.id)
    str = callback.data.split("_")[1]
    base, cur = await connection()
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (callback.from_user.id,)).fetchone()
    if ban == 1:
        await bot.send_message(callback.from_user.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if str == "left":
            sql_state_update = """UPDATE UserStateProjects SET state = state - 1 WHERE callback == ?"""
            data_update = (callback.from_user.id,)
            cur.execute(sql_state_update, data_update)
            base.commit()
            await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            project_unpack = cur.execute(
                f"SELECT id FROM Projects WHERE id IN(SELECT state FROM UserStateProjects WHERE callback == ?)",
                (callback.from_user.id,)).fetchone()
            if project_unpack == None:
                (max_id_project,) = cur.execute(f"SELECT max(id) FROM Projects").fetchone()
                sql_userState_update = """UPDATE UserStateProjects SET state = ? WHERE callback == ?"""
                data_userState_update = (max_id_project, callback.from_user.id)
                cur.execute(sql_userState_update, data_userState_update)
                base.commit()
            for ret in cur.execute(
                    f"SELECT img FROM Projects WHERE id IN(SELECT state FROM UserStateProjects WHERE callback == ?)",
                    (callback.from_user.id,)):
                await bot.send_photo(callback.from_user.id, ret[0],
                                     f"–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                     parse_mode="HTML", reply_markup=projects_kb)
        if str == "right":
            sql_state_update = """UPDATE UserStateProjects SET state = state + 1 WHERE callback == ?"""
            data_update = (callback.from_user.id,)
            cur.execute(sql_state_update, data_update)
            base.commit()
            await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            project_unpack = cur.execute(
                f"SELECT id FROM Projects WHERE id IN(SELECT state FROM UserStateProjects WHERE callback == ?)",
                (callback.from_user.id,)).fetchone()
            if project_unpack == None:
                sql_userState_update = """UPDATE UserStateProjects SET state = ? WHERE callback == ?"""
                data_userState_update = (1, callback.from_user.id)
                cur.execute(sql_userState_update, data_userState_update)
                base.commit()
            for ret in cur.execute(
                    f"SELECT img FROM Projects WHERE id IN(SELECT state FROM UserStateProjects WHERE callback == ?)",
                    (callback.from_user.id,)):
                await bot.send_photo(callback.from_user.id, ret[0],
                                     f"–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                     parse_mode="HTML", reply_markup=projects_kb)




async def throughtScripts(callback:types.CallbackQuery,state:FSMContext):
    await bot.answer_callback_query(callback.id)
    str = callback.data.split("_")[1]
    base, cur = await connection()
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (callback.from_user.id,)).fetchone()
    if ban == 1:
        await bot.send_message(callback.from_user.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if str == "left":
            sql_state_update = """UPDATE UserState SET state = state - 1 WHERE callback == ?"""
            data_update = (callback.from_user.id,)
            cur.execute(sql_state_update, data_update)
            base.commit()
            await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            script_unpack = cur.execute(
                f"SELECT id FROM Scripts WHERE id IN(SELECT state FROM UserState WHERE callback == ?)",
                (callback.from_user.id,)).fetchone()
            if script_unpack == None:
                (max_id_script,) = cur.execute(f"SELECT max(id) FROM Scripts").fetchone()
                sql_userState_update = """UPDATE UserState SET state = ? WHERE callback == ?"""
                data_userState_update = (max_id_script, callback.from_user.id)
                cur.execute(sql_userState_update, data_userState_update)
                base.commit()
            for ret in cur.execute(
                    f"SELECT name,description,price,img FROM Scripts WHERE id IN(SELECT state FROM UserState WHERE callback == ?)",
                    (callback.from_user.id,)):
                await bot.send_photo(callback.from_user.id, ret[3],
                                     f"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:<b>{ret[0]}</b>\n\n–û–ø–∏—Å–∞–Ω–∏–µ:<b>{ret[1]}</b>\n\n–¶–µ–Ω–∞:<b>{ret[2]} —Ä—É–±–ª–µ–π</b>\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                     parse_mode="HTML", reply_markup=scripts_kb)
        if str == "right":
            sql_state_update = """UPDATE UserState SET state = state + 1 WHERE callback == ?"""
            data_update = (callback.from_user.id,)
            cur.execute(sql_state_update, data_update)
            base.commit()
            await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            script_unpack = cur.execute(
                f"SELECT id FROM Scripts WHERE id IN(SELECT state FROM UserState WHERE callback == ?)",
                (callback.from_user.id,)).fetchone()
            if script_unpack == None:
                sql_userState_update = """UPDATE UserState SET state = ? WHERE callback == ?"""
                data_userState_update = (1, callback.from_user.id)
                cur.execute(sql_userState_update, data_userState_update)
                base.commit()
            for ret in cur.execute(
                    f"SELECT name,description,price,img FROM Scripts WHERE id IN(SELECT state FROM UserState WHERE callback == ?)",
                    (callback.from_user.id,)):
                await bot.send_photo(callback.from_user.id, ret[3],
                                     f"–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:<b>{ret[0]}</b>\n\n–û–ø–∏—Å–∞–Ω–∏–µ:<b>{ret[1]}</b>\n\n–¶–µ–Ω–∞:<b>{ret[2]} —Ä—É–±–ª–µ–π</b>\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                     parse_mode="HTML", reply_markup=scripts_kb)
        if str == "choose":
            await bot.send_message(callback.from_user.id,
                                   f"–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Form.name.set()




async def FormName(message: types.Message,state:FSMContext):
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (message.chat.id,)).fetchone()
    if ban == 1:
        await bot.send_message(message.chat.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if message.content_type != 'text':
            await bot.send_message(message.chat.id,
                                   f"–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è –µ—â–µ —Ä–∞–∑:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Form.name.set()
        if message.text == "/start":
            await start(message, state)
        else:
            async with state.proxy() as data:
                data['callback'] = message.chat.id
                data['link'] = message.from_user.username
                data['name'] = message.text
            await bot.send_message(message.chat.id, f"–û—Ç–ª–∏—á–Ω–æ!–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏",
                                   reply_markup=phone_kb)
            await Form.phone.set()



async def phone(message: types.Message,state: FSMContext):
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (message.chat.id,)).fetchone()
    if ban == 1:
        await bot.send_message(message.chat.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if message.content_type == 'text':
            if "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥" in message.text:
                await state.finish()
                remove_kb = types.ReplyKeyboardRemove()
                await bot.send_message(message.chat.id, f"–û—Ç–º–µ–Ω—è—é...",
                                       reply_markup=remove_kb)
                await start(message, state)
        else:
            async with state.proxy() as data:
                data['phone'] = message.contact.phone_number
                (script_name,) = cur.execute(
                    f"SELECT name FROM Scripts WHERE id IN(SELECT state FROM UserState WHERE callback == ?)",
                    (message.chat.id,)).fetchone()
                await bot.send_message(CHANNEL_ID,
                                       f"–î–∞—Ç–∞: {datetime.date.today()}\n\nCallback: {data['callback']}\n\nLink: @{data['link']}\n\n–ò–º—è: {data['name']}\n\n"
                                       f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data['phone']}\n\n–ü—Ä–æ–¥—É–∫—Ç: {script_name}")
            remove_kb = types.ReplyKeyboardRemove()
            await bot.send_message(message.chat.id, f"–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!",
                                   reply_markup=remove_kb)
            await start(message, state)



async def cooperation_answer(message:types.Message,state:FSMContext):
    base, cur = await connection()
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (message.chat.id,)).fetchone()
    if ban == 1:
        await bot.send_message(message.chat.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if message.content_type != 'text':
            await bot.send_message(message.chat.id,
                                   f"–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!–ù–∞–ø–∏—à–∏—Ç–µ –µ—â–µ —Ä–∞–∑:\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await Cooperation.answer.set()
        if message.text == "/start":
            await start(message, state)
        else:
            async with state.proxy() as data:
                data['callback'] = message.chat.id
                data['link'] = message.from_user.username
                data['answer'] = message.text
            await bot.send_message(message.chat.id,f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",reply_markup=phone_kb)
            await Cooperation.phone.set()


async def cooperation_phone(message:types.Message,state:FSMContext):
    base, cur = await connection()
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (message.chat.id,)).fetchone()
    if ban == 1:
        await bot.send_message(message.chat.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if message.content_type == 'text':
            if "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥" in message.text:
                await state.finish()
                remove_kb = types.ReplyKeyboardRemove()
                await bot.send_message(message.chat.id, f"–û—Ç–º–µ–Ω—è—é...",
                                       reply_markup=remove_kb)
                await start(message, state)
        else:
            async with state.proxy() as data:
                data['phone'] = message.contact.phone_number
                await bot.send_message(CHANNEL_ID,
                                       f"–î–∞—Ç–∞: {datetime.date.today()}\n\nCallback: {data['callback']}\n\nLink: @{data['link']}\n\n"
                                       f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data['phone']}\n\n–ü—Ä–æ–¥—É–∫—Ç: {data['what']}\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å: {data['answer']}")

            remove_kb = types.ReplyKeyboardRemove()
            await bot.send_message(message.chat.id, f"–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!",
                                   reply_markup=remove_kb)
            await start(message, state)

async def collab_with_user(callback:types.CallbackQuery,state:FSMContext):
    await bot.answer_callback_query(callback.id)
    str = callback.data.split("_")[1]
    if str == "rezume":
        await bot.send_message(callback.from_user.id, f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç —Å—é–¥–∞:\n\n–Ø –º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .docx .xls .txt .pptx"
                                                      f"\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
        await CollabWithUser.doc.set()
    if str == "offer":
        await bot.send_message(callback.from_user.id,
                               f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç —Å—é–¥–∞:\n\n–Ø –º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .docx .xls .txt .pptx"
                               f"\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
        await CollabWithUser.doc.set()

    if str == "back":
        await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
        await state.finish()
        photo = InputFile("img/img_start.png")
        await bot.send_photo(callback.from_user.id, photo,
                             f"–ü—Ä–∏–≤–µ—Ç! üëãüèº\n\n–ú—ã - –∫–æ–º–ø–∞–Ω–∏—è –†—É—Å IT üá∑üá∫ –∑–∞–Ω–∏–º–∞—é—â–∞—è—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —É—Ä–æ–≤–Ω–µüíª"
                             f"\n\n–ü–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –Ω–∞–º–∏ –ø–æ–±–ª–∏–∂–µ!\n\n–í—ã–±–∏—Ä–∞–π –æ–ø—Ü–∏—é:",
                             reply_markup=start_kb)

async def user_collab_send_document(message:types.Message,state:FSMContext):
    if message.content_type == "text":
        if message.text == "/start":
            await state.finish()
            await start(message,state)
        else:
            await bot.send_message(message.chat.id, f"–Ø –º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .docx .xls .txt .pptx"
                               f"\n\n–î–ª—è —Ç–æ–≥–æ,—á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –Ω–∞–∂–º–∏—Ç–µ /start")
            await CollabWithUser.doc.set()
    else:
        async with state.proxy() as data:
            data['link'] = message.from_user.username
            data['call'] = message.chat.id
            data['doc'] = message.document.file_id
            await bot.send_document(CHANNEL_ID,data['doc'],caption=f"–î–∞—Ç–∞: {datetime.date.today()}\n\nCallback: {data['call']}\n\nLink: {data['link']}")
        await state.finish()
        await bot.send_message(message.chat.id,f"–°–ø–∞—Å–∏–±–æ, –ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç! –û—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!",reply_markup=start_kb)

async def throughtJokes(callback:types.CallbackQuery,state:FSMContext):
    await bot.answer_callback_query(callback.id)
    str = callback.data.split("_")[1]
    base, cur = await connection()
    (ban,) = cur.execute(f"SELECT ban FROM Users WHERE callback == ?", (callback.from_user.id,)).fetchone()
    if ban == 1:
        await bot.send_message(callback.from_user.id,
                               f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ –±–∞–Ω! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    elif ban == 0:
        if str == "left":
            sql_state_update = """UPDATE UserStateJokes SET state = state - 1 WHERE callback == ?"""
            data_update = (callback.from_user.id,)
            cur.execute(sql_state_update, data_update)
            base.commit()
            await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            joke_unpack = cur.execute(
                f"SELECT id FROM Jokes WHERE id IN(SELECT state FROM UserStateJokes WHERE callback == ?)",
                (callback.from_user.id,)).fetchone()
            if joke_unpack == None:
                (max_id_joke,) = cur.execute(f"SELECT max(id) FROM Jokes").fetchone()
                sql_userState_update = """UPDATE UserStateJokes SET state = ? WHERE callback == ?"""
                data_userState_update = (max_id_joke, callback.from_user.id)
                cur.execute(sql_userState_update, data_userState_update)
                base.commit()
            for ret in cur.execute(
                    f"SELECT joke FROM Jokes WHERE id IN(SELECT state FROM UserStateJokes WHERE callback == ?)",
                    (callback.from_user.id,)):
                await bot.send_message(callback.from_user.id,
                                     f"<b>{ret[0]}</b>\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                     parse_mode="HTML", reply_markup=kb_jokes)
        if str == "right":
            sql_state_update = """UPDATE UserStateJokes SET state = state + 1 WHERE callback == ?"""
            data_update = (callback.from_user.id,)
            cur.execute(sql_state_update, data_update)
            base.commit()
            await bot.delete_message(chat_id=callback.from_user.id, message_id=callback.message.message_id)
            jokes_unpack = cur.execute(
                f"SELECT id FROM Jokes WHERE id IN(SELECT state FROM UserStateJokes WHERE callback == ?)",
                (callback.from_user.id,)).fetchone()
            if jokes_unpack == None:
                sql_userState_update = """UPDATE UserStateJokes SET state = ? WHERE callback == ?"""
                data_userState_update = (1, callback.from_user.id)
                cur.execute(sql_userState_update, data_userState_update)
                base.commit()
            for ret in cur.execute(
                    f"SELECT joke FROM Jokes WHERE id IN(SELECT state FROM UserStateJokes WHERE callback == ?)",
                    (callback.from_user.id,)):
                await bot.send_message(callback.from_user.id,
                                     f"<b>{ret[0]}</b>\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ - –Ω–∞–∂–º–∏—Ç–µ /start",
                                     parse_mode="HTML", reply_markup=kb_jokes)



def setup(dp):
    dp.register_message_handler(start,commands='start',state = None)
    dp.register_message_handler(info, commands='info', state=None)
    dp.register_message_handler(channels, commands='channels', state=None)
    dp.register_message_handler(FormName,content_types='text', state=Form.name)
    dp.register_message_handler(phone, content_types=['contact','text'], state=Form.phone)
    dp.register_message_handler(cooperation_answer, content_types='text', state=Cooperation.answer)
    dp.register_message_handler(cooperation_phone, content_types=['contact','text'], state=Cooperation.phone)
    dp.register_message_handler(user_insert_consult_other, content_types=['text'], state=Cooperation.other)
    dp.register_message_handler(user_collab_send_document, content_types=['text','document'], state=CollabWithUser.doc)
    dp.register_message_handler(mess_to_chatGPT, content_types='any', state=ChatGPT.mess)


    dp.register_callback_query_handler(callbackKeyboardStart,Text(startswith="start_"),state=None)
    dp.register_callback_query_handler(throughtScripts, Text(startswith="scripts_"),state=None)
    dp.register_callback_query_handler(throughtProjects, Text(startswith="projects_"), state=None)
    dp.register_callback_query_handler(cooperation_what_of_user, Text(startswith="develop_"), state=Cooperation.what)
    dp.register_callback_query_handler(collab_with_user, Text(startswith="collab_"), state=None)
    dp.register_callback_query_handler(throughtJokes, Text(startswith="jokesuser_"), state=None)
